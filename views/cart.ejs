<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Your Cart</title>
    <!-- Bootstrap 5 CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Bootstrap Icons -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"
    />
    <link href="./cart.css" rel="stylesheet" />
  </head>
  <body class="bg-light">
    <div
      class="d-flex justify-content-between align-items-center mb-2 mt-2 me-4 header"
    >
      <h1 class="ms-2 mt-1"><i class="bi bi-cart3"></i> Your Cart</h1>
      <a href="/" class="continueShopping">
        <i class="bi bi-arrow-left"></i>Home
      </a>
    </div>
    <div class="container">
      <% if (cart && cart.items.length > 0) { %>
      <div class="card mb-4">
        <div class="card-body">
          <% let totalAmount = 0; %> <% cart.items.forEach(food => { %>
          <div class="row g-3 align-items-center mb-4">
            <!-- Product Image -->
            <div class="col-4 col-md-2">
              <img
                src="<%= food.item.image %>"
                class="cart-item-image img-fluid"
                alt="<%= food.item.ItemName %>"
              />
            </div>

            <!-- Product Info -->
            <div class="col-4 col-md-4">
              <h3 class="h5 mb-1"><%= food.item.ItemName %></h3>
              <p class="text-muted mb-0">
                &#8377;<%= food.item.Price * 15 %> per item
              </p>
            </div>

            <!-- Quantity Controls -->
            <div class="col-4 col-md-3">
              <div class="input-group">
                <input
                  type="number"
                  id="quantity-<%= food.item._id %>"
                  class="form-control quantity-input"
                  value="<%= food.quantity %>"
                  min="1"
                />
                <button
                  class="btn btn-outline-secondary"
                  onclick="updateQuantity('<%= food.item._id %>', '<%= food.quantity %>')"
                >
                  <i class="bi bi-arrow-clockwise"></i>
                </button>
              </div>
            </div>

            <!-- Price and Actions -->
            <div class="col-12 col-md-3 text-end removeItem">
              <button
                class="btn btn-danger btn-sm"
                onclick="deleteItem('<%= food.item._id %>')"
              >
                <i class="bi bi-trash"></i> Remove
              </button>
              <p class="mb-2 fw-bold">
                &#8377;<%= (food.item.Price * 15 * food.quantity).toFixed(1) %>
              </p>
            </div>

            <% totalAmount += food.item.Price * 15 * food.quantity; %>
          </div>
          <% }) %>
        </div>
      </div>

      <!-- Total and Checkout -->
      <div class="card">
        <div class="card-body">
          <div class="row justify-content-end">
            <div class="col">
              <dl class="row">
                <dt class="col-6">Total Amount:</dt>
                <dd class="col-6 text-end h4 text-success">
                  &#8377;<%= totalAmount.toFixed(2) %>
                </dd>
              </dl>
              <button class="btn btn-success w-100" onclick="placeOrder()">
                <i class="bi bi-check-circle"></i> Place Order
              </button>
            </div>
          </div>
        </div>
      </div>
      <% } else { %>
      <div class="alert alert-warning text-center" role="alert">
        <i class="bi bi-cart-x"></i> Your cart is empty. Start adding items!
      </div>
      <% } %>
    </div>
    <script>
      function updateQuantity(itemId, currentQuantity) {
        const newQuantity = document.getElementById(`quantity-${itemId}`).value;
        if (newQuantity && newQuantity > 0) {
          fetch(`/cart/update/${itemId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ quantity: newQuantity }),
          })
            .then((response) => {
                location.reload();
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        } else {
          alert("Please enter a valid quantity.");
        }
      }

      function deleteItem(itemId) {
        if (
          confirm("Are you sure you want to delete this item from your cart?")
        ) {
          fetch(`/cart/delete/${itemId}`, {
            method: "DELETE",
          })
            .then((response) => {
              if (response.ok) {
                alert("Item deleted successfully!");
                location.reload(); // Reload the page to reflect changes
              } else {
                response.json().then((data) => {
                  alert(data.error || "Failed to delete item.");
                });
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              alert("An error occurred while trying to delete the item.");
            });
        }
      }
      function placeOrder() {
        if (confirm("Are you sure you want to place the order?")) {
          fetch("/cart/place-order", {
            method: "POST",
          })
            .then((response) => {
              if (response.ok) {
                alert("Order placed successfully!");
                window.location.href = "/orders"; // Redirect to the orders page
              } else {
                response.json().then((data) => {
                  alert(data.error || "Failed to place order.");
                });
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              alert("An error occurred while trying to place the order.");
            });
        }
      }
    </script>
  </body>
</html>
